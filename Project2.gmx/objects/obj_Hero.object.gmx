<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_heroIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_start = x ;
y_start = y ;
dir = 1;
depth = -5 ;

phy_fixed_rotation = true ;

move_speed = 300 ;
run_speed = 7
max_xspeed = 3 ;

jump = false ;
grounded = false ;
platspeed = 0 ;

min_jump_force = 40
jump_force = min_jump_force ;
max_jump_force = 80 ;

dashing = false ;
dash_speed = 15 ;

acc_level = 0 ;

freeze = false ;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(place_meeting(x, y+1, obj_collisor)){
    grounded = true ;
    platspeed = obj_collisor.phy_speed_y ;
    
}else{
    grounded = false ;
}

if(grounded == true){
    phy_speed_y = platspeed ;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_xscale = dir;

if( keyboard_check(vk_shift) &amp;&amp; dashing == false) {
    max_xspeed = run_speed ;
}else if(dashing == true){
    max_xspeed = dash_speed ;
}else if(!jump){
    max_xspeed = 3 ;
}

if(keyboard_check(vk_space) &amp;&amp; jump_force &lt; max_jump_force ) {      
        jump_force = jump_force  + 0.5;       
}

phy_speed_x = max(min(phy_speed_x, max_xspeed), -max_xspeed ) ;

if(dashing == true &amp;&amp; jump == true &amp;&amp; phy_speed_y == 0 ){
    jump = false ;
    dashing = false ;
}

if(((phy_speed_x &gt; 0.1 &amp;&amp; phy_speed_x &lt; 2) || (phy_speed_x &lt; -0.1 &amp;&amp; phy_speed_x &gt; -2 )) &amp;&amp; jump == false &amp;&amp; dashing == false ) {

    sprite_index = spr_heroWalk ;
    image_speed = abs(phy_speed_x) / 10 ;
    
}else if((phy_speed_x &gt; 2 || phy_speed_x &lt; -2) &amp;&amp; jump == false &amp;&amp; dashing == false){

    sprite_index = spr_heroRun ;
    image_speed = abs( phy_speed_x ) / 20 ;
    
}else if(jump == true &amp;&amp; place_meeting(x, y+1, obj_collisor ) &amp;&amp;  phy_speed_y == 0 &amp;&amp; dashing == false){

      jump = false ;
      
}else if(jump == true &amp;&amp; phy_speed_y &lt; 0 &amp;&amp; dashing == false){
    sprite_index = spr_heroJump ;
}else if(jump == true &amp;&amp; phy_speed_y &gt;= 0 &amp;&amp; dashing == false){
    sprite_index = spr_heroFall ;
    
}else if(dashing == true){
    sprite_index = spr_heroDash ;
    var inst = instance_create(x,y, obj_heroClone);
    with(inst) image_xscale = other.dir;
}else{
    sprite_index = spr_heroIdle ;
    image_speed =0.1 ;
}

if(grounded == true &amp;&amp; !(keyboard_check(vk_left) || keyboard_check(vk_right)) ){
    phy_speed_x = 0;

}

if(freeze == true){
     sprite_index = spr_heroIdle ;
     image_speed =0.1 ;
} ;


background_y[0] = phy_position_y / 14 ;
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_levelSwapper">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_freezer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>freeze = true ;

phy_speed_x = 0 ;
phy_speed_y = 0 ;
jump_force = min_jump_force ;
jump = false ;
dashing = false ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_redA">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(acc_level &lt; 1){

phy_position_x = x_start ;
phy_position_y = y_start ;

phy_speed_x = 0 ;
phy_speed_y = 0 ;
jump_force = min_jump_force ;
jump = false ;
dashing = false ;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_checkPoint">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_start = x;
y_start = y;
freeze = false ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_collisor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// make this happen


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(jump == false &amp;&amp; freeze == false) {
dir = 1;
physics_apply_force(x,y,move_speed, -20);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(jump == false &amp;&amp; freeze == false) {
dir = -1;
physics_apply_force(x,y, -move_speed, -20) ;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phy_position_x = x_start ;
phy_position_y = y_start ;

phy_speed_x = 0 ;
phy_speed_y = 0 ;
jump_force = min_jump_force ;
jump = false ;
dashing = false ;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// return to CP

phy_position_x = x_start ;
phy_position_y = y_start ;

phy_speed_x = 0 ;
phy_speed_y = 0 ;
jump_force = min_jump_force ;
jump = false ;
dashing = false ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(dashing == false &amp;&amp; jump == true &amp;&amp; freeze == false) {

    dir = 1 ;
    dashing = true ;
    phy_speed_x = dash_speed ;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(dashing == false &amp;&amp; jump == true &amp;&amp; freeze == false) {

    dir = -1 ;
    dashing = true ;
    phy_speed_x = -dash_speed ;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(place_meeting(x, y+1, obj_collisor ) &amp;&amp; freeze == false) {

    jump = true ;
    physics_apply_impulse(x,y, 0, -jump_force) ;
    jump_force = min_jump_force ;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.300000011920929</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.100000001490116</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>48,16</point>
    <point>48,64</point>
    <point>16,64</point>
  </PhysicsShapePoints>
</object>
